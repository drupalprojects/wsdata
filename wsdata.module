<?php

/**
 * @file
 * Contains wsdata.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function wsdata_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the wsdata module.
    case 'help.page.wsdata':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Web service data sources as configuration.') . '</p>';
      return $output;

    default:
  }
}


/**
 * WSCall Configuration form.
 */
function wsdata_wscall_configuration_form($configurations = [], $wscall_option = NULL) {
  $wscalls = entity_load_multiple('wscall');
  $options = ['' => t('- Select -')];
  foreach ($wscalls as $wscall) {
    $options[$wscall->id()] = $wscall->label();
  }

  $element['wscall'] = [
    '#type' => 'select',
    '#title' => t('Web Service Call'),
    '#options' => $options,
    '#required' => TRUE,
    '#ajax' => [
      'callback' => 'wscallConfigurationsReplacements',
      'wrapper' => 'wscall-replacement-tokens-wrapper',
    ],
    '#default_value' => (isset($configurations['wscall']) ? $configurations['wscall'] : '')
  ];

  // Fetch the replacement tokens for this wscall.
  $element['replacements'] = [
    '#id' => 'wscall-replacement-tokens-wrapper',
    '#type' => 'container',
  ];

  // Based on the wscall create the replacements section of the wscall.
  if (!empty($wscall_option)) {
    foreach ($wscalls[$wscall_option]->getReplacements() as $replacement) {
      $element['replacements'][$replacement] = [
        '#type' => 'textfield',
        '#title' => $replacement,
        '#default_value' => (isset($configurations['replacements'][$replacement]) ? $configurations['replacements'][$replacement] : '')
      ];
    }
  }

  $element['data'] = [
    '#type' => 'textarea',
    '#title' => t('Data'),
    '#default_value' => (isset($configurations['data']) ? $configurations['data'] : '')
  ];

  $element['returnToken'] = [
    '#type' => 'textfield',
    '#title' => t('Token to select'),
    '#description' => t('Seperate element names with a ":" to select nested elements.'),
    '#default_value' => (isset($configurations['returnToken']) ? $configurations['returnToken'] : '')
  ];
  return $element;
}

/**
 * Ajax form builder.
 */
function wscallConfigurationsReplacements(array &$form, FormStateInterface $form_state) {
  if (isset($form['replacements'])) {
    return $form['replacements'];
  }
  elseif(isset($form['settings']['replacements'])) {
    return $form['settings']['replacements'];
  }
  else {
    return $form;
  }
}
