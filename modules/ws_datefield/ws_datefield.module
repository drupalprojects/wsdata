<?php

/**
 * @file
 * Main module for ws_datefields
 */

define('WS_DATEFIELD_DATE_VALUE_FORMAT', 'Y-m-d H:i:s');

/**
 * Implements hook_wsfields_FIELD_TYPE_data_alter().
 *
 * @param array $data
 *  An array of date information
 *  Ex: array(
 *        LANGUAGE_NONE => array(
 *          0 => array(  value => DateTime/DateObject instance, value2 => DateTime/DateObject instance, rrule => iCal Repeat Rule),
 *          1 => array(  value => DateTime/DateObject instance, value2 => DateTime/DateObject instance, rrule => iCal Repeat Rule),
 *        )
 *      );
 *
 * Prepares data for the 'date' field type
 */
function ws_datefield_wsfields_date_data_alter($data, $field) {

  // @todo check the field settings to know if the repeat rules or end dates are enabled on this field
  // @todo determine if the offset needs to be in the field value or not
  $repeat = FALSE;
  $end_date = FALSE;
  
  if ($field['storage']['settings']['translated']) {
    foreach($data as $language => $values) {
      foreach ($values as $value) {
        // Populate the field data
        _ws_datefield_populate_date_field_data($field_data, $value, $repeat, $end_date, $language);
      }
    }
  }
  else {
    foreach($data[LANGUAGE_NONE] as $value) {
      // Populate field data
      _ws_datefield_populate_date_field_data($field_data, $value, $repeat, $end_date);
    }
  }

  // Save the new field data
  return $field_data;
}

/**
 * Build the field array
 */
function _ws_datefield_populate_date_field_data(&$field_data, &$value, $repeat = FALSE, $end_date = FALSE, $language = LANGUAGE_NONE) {
  $field_data[$language][] = array(
    'value' => $value['value']->format(WS_DATEFIELD_DATE_VALUE_FORMAT),
    'timezone' => $value['value']->getTimezone()-getName(),
    'offset' => $value['value']->getOffset(),
  );
  
  // Check for an end date
  if ($end_date and isset($value['value2'])) {
    // Since we're always adding to the end of the array, we can just use count -1
    $field_data[$language][count($field_data[$language]) -1]['value2'] = $value['value2']->format(WS_DATEFIELD_DATE_VALUE_FORMAT);
  }
  
  // Check for the repeat rule
  if ($repeat and isset($value['rrule'])) {
    // Since we're always adding to the end of the array, we can just use count -1
    $field_data[$language][count($field_data[$language]) -1]['value2'] = $value['value2']->format(WS_DATEFIELD_DATE_VALUE_FORMAT);    
  }
}

/**
 * Implements hook_wsfields_FIELD_TYPE_data_alter().
 *
 * Prepares data for the 'datetime' field type
 */
function ws_datefield_wsfields_datetime_data_alter() {
  // @todo
}

/**
 * Implements hook_wsconfig_processor_info().
 */
function ws_datefield_wsconfig_processor_info() {
  return array(
    'ws_datefield_processor' => array(
      'fields' => array(
        'datetime' => 'Date',
      ),
    ),
  );
}